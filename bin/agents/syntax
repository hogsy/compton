If you're reading this, awesome!

The scripting language is based heavily on the BASIC
programming language, and because of that it's incredibly
simple and easy to learn.

```
#include "myscript/script.src"

proc InitFunc
return
```

http://clrhome.org/table/

## Compiled (CSRC)

```
uint8_t hdr[4] = "CSRC"
```

## Preprocessor

`# <comment>`
    This is a comment, everything after '# ' will be
    ignored.

`#include <path>`
    Includes another script alongside this one.
    Useful if you want to implement some generic functions
    to use everywhere rather than rewriting them out
    again and again.
    
## Functions

Below are a list of commands and what they do. These will probably be
implemented as their own opcodes.

`proc <procedure>`
    This declares a procedure.

`add <number,number>`
    Adds two variables together.

`abs <number>`
    Returns the absolute value of number.

`acs <number>`
    Returns the arc cosine of number.

`asn <number>`
    Returns the arc size of number.

`cos <number>` 
    Returns the cosine of number.

`len <string>`
    Returns the number of characters in string.

`var <variable> = <value>`
    Assigns value to the named variable.

`return <data, optional>`

`call <procedure>`
    This calls a procedure. The return type of that
    procedure will be stored in A0.

`print <message>`
    Prints out a message, useful for debugging.
